<!DOCTYPE html>
<html lang="fr" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Edu+NSW+ACT+Hand+Pre:wght@400&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/alpinejs" defer></script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <script src="https://unpkg.com/lottie-web@5.7.6/build/player/lottie.min.js"></script>
    <script defer src="https://stats.le2mholding.com/script.js" data-website-id="1ab8086f-3449-443a-ab58-301fd21a370f"></script>
    <title>Ma RoadMap - Inscription Professionnel</title>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'green-primary': '#10b981',
                        'green-secondary': '#059669',
                        'green-light': '#d1fae5',
                        'blue-accent': '#3b82f6',
                    }
                }
            }
        }
    </script>
    <style>
        .edu-nsw {
            font-family: 'Edu NSW ACT Hand Pre', cursive;
            font-weight: 20;
            font-size: 20px;
        }
        
        body {
            background: linear-gradient(135deg, #ecfdf5 0%, #f0fdf4 25%, #f0f9ff 50%, #ecfdf5 75%, #f0fdf4 100%);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
        }
        
        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .animate-fade-in-up {
            animation: fadeInUp 0.8s ease-out;
        }
        
        .glass-effect {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .input-field {
            transition: all 0.3s ease;
        }
        
        .input-field:focus {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.15);
        }
        
        .btn-primary {
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }
        
        .btn-primary:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.6s;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
        }
        
        .btn-primary:hover:before {
            left: 100%;
        }
        
        .skill-tag {
            transition: all 0.3s ease;
        }
        
        .skill-tag:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 5px 15px rgba(16, 185, 129, 0.3);
        }
    </style>
</head>
<body class="min-h-full" x-data="inscriptionApp()">
    
    <!-- Header Navigation -->
    <div x-data="{ open: false }"
         @mouseenter="open = true"
         @mouseleave="open = false"
         class="fixed top-5 left-1/2 transform -translate-x-1/2 bg-black text-white rounded-full shadow-xl overflow-hidden px-6 py-2 z-50 flex items-center justify-between transition-all duration-700"
         :class="open ? 'w-[520px]' : 'w-[210px]'">
        
        <!-- Lottie + Titre -->
        <div class="flex items-center gap-0.1 flex-shrink-0">
            <div id="lottie-icon" class="w-7 h-7"></div>
            <span class="edu-nsw">Ma RoadMap</span>
        </div>
        
        <!-- Menu -->
        <nav class="flex gap-6 text-sm ml-8 transition-opacity duration-500"
             x-show="open"
             x-transition:enter="transition ease-out duration-500"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-300"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0">
            <a href="#" class="hover:underline">Historique</a>
            <a href="#" class="hover:underline">Premium</a>
            <a href="#" class="hover:underline">Compte</a>
        </nav>
    </div>

    <!-- Main Content -->
    <main class="min-h-screen flex items-center justify-center px-4 py-20">
        <div class="w-full max-w-2xl">
            
            <!-- Hero Section -->
            <div class="text-center mb-12 animate-fade-in-up">
                <h1 class="text-4xl md:text-5xl font-bold bg-gradient-to-r from-green-primary via-blue-accent to-green-secondary bg-clip-text text-transparent mb-4">
                    Rejoignez Ma RoadMap
                </h1>
                <p class="text-xl text-gray-700 mb-2">
                    Créez votre profil professionnel
                </p>
                <p class="text-gray-600">
                    Connectez-vous avec des clients et développez votre activité
                </p>
            </div>

            <!-- Messages de feedback -->
            <div x-show="successMessage" class="mb-6 bg-green-50 border border-green-200 rounded-lg p-4 animate-fade-in-up">
                <div class="flex">
                    <svg class="w-5 h-5 text-green-400 mr-3 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <p class="text-green-700 font-medium" x-text="successMessage"></p>
                </div>
            </div>

                <div x-show="countdown !== null" class="text-center mt-4 text-green-700 font-medium transition-all">
    Redirection dans <span x-text="countdown"></span> seconde<span x-text="countdown > 1 ? 's' : ''"></span>...
</div>





            <div x-show="errorMessage" class="mb-6 bg-red-50 border border-red-200 rounded-lg p-4 animate-fade-in-up">
                <div class="flex">
                    <svg class="w-5 h-5 text-red-400 mr-3 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                    <p class="text-red-700 font-medium" x-text="errorMessage"></p>
                </div>
            </div>

            <!-- Formulaire d'inscription -->
            <div class="glass-effect rounded-3xl shadow-2xl p-8 md:p-12 border border-white/30 animate-fade-in-up">
                <form @submit.prevent="submitRegistration()" class="space-y-6">
                    
                    <!-- Nom -->
                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Nom complet *
                        </label>
                        <input 
                            x-model="form.name"
                            type="text" 
                            required
                            class="input-field w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                            placeholder="Votre nom et prénom"
                            :class="errors.name ? 'border-red-300 focus:border-red-500' : ''"
                        >
                        <p x-show="errors.name" class="text-red-500 text-sm mt-1" x-text="errors.name"></p>
                    </div>

                    <!-- Email -->
                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Email professionnel *
                        </label>
                        <input 
                            x-model="form.email"
                            type="email" 
                            required
                            class="input-field w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                            placeholder="votre@email.com"
                            :class="errors.email ? 'border-red-300 focus:border-red-500' : ''"
                        >
                        <p x-show="errors.email" class="text-red-500 text-sm mt-1" x-text="errors.email"></p>
                    </div>

                    <!-- Métier -->
                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Métier / Profession *
                        </label>
                        <select 
                            x-model="form.job"
                            required
                            class="input-field w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                            :class="errors.job ? 'border-red-300 focus:border-red-500' : ''"
                        >
                            <option value="">Sélectionnez votre métier</option>
                            <option value="Développeur Web">Développeur Web</option>
                            <option value="Designer Graphique">Designer Graphique</option>
                            <option value="Photographe">Photographe</option>
                            <option value="Rédacteur">Rédacteur</option>
                            <option value="Consultant">Consultant</option>
                            <option value="Marketing Digital">Marketing Digital</option>
                            <option value="Architecte">Architecte</option>
                            <option value="Comptable">Comptable</option>
                            <option value="Traducteur">Traducteur</option>
                            <option value="Autre">Autre</option>
                        </select>
                        <p x-show="errors.job" class="text-red-500 text-sm mt-1" x-text="errors.job"></p>
                    </div>

                    <!-- Compétences -->
                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">
                            Compétences principales
                        </label>
                        <div class="flex flex-wrap gap-2 mb-3">
                            <template x-for="skill in form.skills" :key="skill">
                                <span class="skill-tag inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gradient-to-r from-green-light to-blue-50 text-green-secondary border border-green-primary/30">
                                    <span x-text="skill"></span>
                                    <button 
                                        type="button"
                                        @click="removeSkill(skill)"
                                        class="ml-2 text-green-secondary hover:text-red-500 transition-colors"
                                    >
                                        ×
                                    </button>
                                </span>
                            </template>
                        </div>
                        <div class="flex gap-2">
                            <input 
                                x-model="newSkill"
                                @keyup.enter="addSkill()"
                                type="text" 
                                class="input-field flex-1 px-4 py-2 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                                placeholder="Ajoutez une compétence..."
                            >
                            <button 
                                type="button"
                                @click="addSkill()"
                                class="btn-primary px-4 py-2 bg-gradient-to-r from-green-primary to-green-secondary text-white rounded-xl font-medium"
                            >
                                Ajouter
                            </button>
                        </div>
                        <p class="text-gray-500 text-sm mt-1">
                            Ajoutez vos compétences principales (ex: JavaScript, Photoshop, SEO...)
                        </p>
                    </div>

                    <!-- Expériences professionnelles -->
        <div>
  <label class="block text-sm font-semibold text-gray-700 mb-2">
    Expériences professionnelles
  </label>
  
  <template x-for="(exp, index) in form.experiences" :key="index">
    <div class="mb-4 p-4 rounded-xl border bg-white/70 backdrop-blur">
      <input x-model="exp.title" type="text" placeholder="Poste (ex: Développeur Web)"
        class="input-field w-full mb-2 px-4 py-2 border rounded" required>
      <input x-model="exp.company" type="text" placeholder="Entreprise (ex: Google)"
        class="input-field w-full mb-2 px-4 py-2 border rounded">
      <input x-model="exp.duration" type="text" placeholder="Durée (ex: 2 ans)"
        class="input-field w-full mb-2 px-4 py-2 border rounded">
      <textarea x-model="exp.description" placeholder="Description"
        class="input-field w-full px-4 py-2 border rounded"></textarea>
    </div>
  </template>
  
  <button type="button" @click="addExperience()" class="btn-primary bg-green-primary text-white px-4 py-2 rounded font-medium">
    Ajouter une expérience
  </button>
</div>

                    <!-- Mot de passe -->
                    <div class="grid md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Mot de passe *
                            </label>
                            <div class="relative">
                                <input 
                                    x-model="form.password"
                                    :type="showPassword ? 'text' : 'password'"
                                    required
                                    class="input-field w-full px-4 py-3 pr-12 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                                    placeholder="Minimum 8 caractères"
                                    :class="errors.password ? 'border-red-300 focus:border-red-500' : ''"
                                >
                                <button 
                                    type="button"
                                    @click="showPassword = !showPassword"
                                    class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 transition-colors"
                                >
                                    <svg x-show="!showPassword" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                    </svg>
                                    <svg x-show="showPassword" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
                                    </svg>
                                </button>
                            </div>
                            <p x-show="errors.password" class="text-red-500 text-sm mt-1" x-text="errors.password"></p>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-semibold text-gray-700 mb-2">
                                Confirmer le mot de passe *
                            </label>
                            <input 
                                x-model="form.confirmPassword"
                                type="password" 
                                required
                                class="input-field w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-green-primary focus:outline-none bg-white/80 backdrop-blur-sm"
                                placeholder="Répétez votre mot de passe"
                                :class="errors.confirmPassword ? 'border-red-300 focus:border-red-500' : ''"
                            >
                            <p x-show="errors.confirmPassword" class="text-red-500 text-sm mt-1" x-text="errors.confirmPassword"></p>
                        </div>
                    </div>

                    <!-- Conditions d'utilisation -->
                    <div class="flex items-start space-x-3">
                        <input 
                            x-model="form.acceptTerms"
                            type="checkbox" 
                            required
                            class="mt-1 w-5 h-5 text-green-primary border-2 border-gray-300 rounded focus:ring-green-primary"
                            :class="errors.acceptTerms ? 'border-red-300' : ''"
                        >
                        <label class="text-sm text-gray-600">
                            J'accepte les 
                            <a href="#" class="text-green-primary hover:underline font-medium">conditions d'utilisation</a> 
                            et la 
                            <a href="#" class="text-green-primary hover:underline font-medium">politique de confidentialité</a>
                        </label>
                    </div>
                    <p x-show="errors.acceptTerms" class="text-red-500 text-sm" x-text="errors.acceptTerms"></p>

                    <!-- Bouton d'inscription -->
                    <div class="text-center pt-6">
                        <button 
                            type="submit"
                            :disabled="loading"
                            class="btn-primary bg-gradient-to-r from-green-primary via-green-secondary to-green-primary text-white px-12 py-4 rounded-2xl font-bold text-lg shadow-2xl w-full md:w-auto"
                        >
                            <span x-show="!loading" class="flex items-center justify-center">
                                <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                                </svg>
                                Créer mon compte professionnel
                            </span>
                            <span x-show="loading" class="flex items-center justify-center">
                                <svg class="animate-spin -ml-1 mr-3 h-6 w-6 text-white" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Création en cours...
                            </span>
                        </button>
                        
                        <p class="text-sm text-gray-500 mt-4">
                            Inscription gratuite • Aucune carte bancaire requise
                        </p>
                    </div>

                    <!-- Lien vers connexion -->
                    <div class="text-center pt-4 border-t border-gray-200">
                        <p class="text-gray-600">
                            Vous avez déjà un compte ? 
                            <a href="professionnel.html" class="text-green-primary hover:text-green-secondary font-semibold hover:underline transition-colors">
                                Connectez-vous
                            </a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
    </main>

   <script>
  // Initialisation de Lottie
  document.addEventListener('DOMContentLoaded', function() {
    lottie.loadAnimation({
      container: document.getElementById('lottie-icon'),
      renderer: 'svg',
      loop: true,
      autoplay: true,
      path: 'https://assets2.lottiefiles.com/packages/lf20_V9t630.json'
    });
  });

  // Application Alpine.js
  function inscriptionApp() {
    return {
      // Configuration Hasura
      hasuraEndpoint: 'https://hasura-preprod.maroadmap.com/v1/graphql',
      hasuraAdminSecret: 'newpassword',

      // États de l'application
      loading: false,
      showPassword: false,
      successMessage: '',
      errorMessage: '',
      countdown: null,

      // Données du formulaire
      form: {
        name: '',
        email: '',
        job: '',
        experiences: [],
        skills: [],
        password: '',
        confirmPassword: '',
        acceptTerms: false
      },

      // Pour gérer les compétences
      newSkill: '',
      errors: {},

      addExperience() {
        this.form.experiences.push({ title: '', company: '', duration: '', description: '' });
      },

      addSkill() {
        if (this.newSkill.trim() && !this.form.skills.includes(this.newSkill.trim())) {
          this.form.skills.push(this.newSkill.trim());
          this.newSkill = '';
        }
      },

      removeSkill(skill) {
        this.form.skills = this.form.skills.filter(s => s !== skill);
      },

      validateForm() {
        this.errors = {};
        let isValid = true;

        if (!this.form.name.trim()) {
          this.errors.name = 'Le nom est requis';
          isValid = false;
        } else if (this.form.name.trim().length < 2) {
          this.errors.name = 'Le nom doit contenir au moins 2 caractères';
          isValid = false;
        }

        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!this.form.email.trim()) {
          this.errors.email = 'L\'email est requis';
          isValid = false;
        } else if (!emailRegex.test(this.form.email)) {
          this.errors.email = 'Format d\'email invalide';
          isValid = false;
        }

        if (!this.form.job) {
          this.errors.job = 'Veuillez sélectionner votre métier';
          isValid = false;
        }

        if (!this.form.password) {
          this.errors.password = 'Le mot de passe est requis';
          isValid = false;
        } else if (this.form.password.length < 8) {
          this.errors.password = 'Le mot de passe doit contenir au moins 8 caractères';
          isValid = false;
        }

        if (!this.form.confirmPassword) {
          this.errors.confirmPassword = 'Veuillez confirmer votre mot de passe';
          isValid = false;
        } else if (this.form.password !== this.form.confirmPassword) {
          this.errors.confirmPassword = 'Les mots de passe ne correspondent pas';
          isValid = false;
        }

        if (!this.form.acceptTerms) {
          this.errors.acceptTerms = 'Vous devez accepter les conditions d\'utilisation';
          isValid = false;
        }

        return isValid;
      },

      async submitRegistration() {
        // 1️⃣ Déclaration de la mutation GraphQL
        const mutation = `
          mutation InsertProfessional($object: professionals_insert_input!) {
            insert_professionals_one(object: $object) {
              id
              name
              email
              job
              skills
            }
          }
        `;

        // Réinitialiser messages et valider
        this.clearMessages();
        if (!this.validateForm()) {
          this.errorMessage = 'Veuillez corriger les erreurs dans le formulaire';
          return;
        }

        this.loading = true;

        try {
          // 2️⃣ Préparation des variables
          const variables = {
            object: {
              name: this.form.name.trim(),
              email: this.form.email.toLowerCase().trim(),
              job: this.form.job,
              skills: this.form.skills.join(', '),
              password_hash: await this.hashPassword(this.form.password),
              created_at: new Date().toISOString()
            }
          };

          // 3️⃣ Envoi de la requête à Hasura
          const response = await fetch(this.hasuraEndpoint, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'x-hasura-admin-secret': this.hasuraAdminSecret,
              'x-hasura-role': 'public'
            },
            body: JSON.stringify({ query: mutation, variables })
          });

          const result = await response.json();

          // 4️⃣ Gestion des erreurs Hasura
          if (result.errors) {
            console.error('Erreur Hasura :', result.errors);
            this.errorMessage = result.errors[0].message;
            return;
          }

          // 5️⃣ Succès de l'inscription
          const newProfessional = result.data.insert_professionals_one;
          this.successMessage = `Inscription réussie ! Bienvenue ${newProfessional.name}`;
          this.countdown = 3;
          const interval = setInterval(() => {
            this.countdown--;
            if (this.countdown <= 0) {
              clearInterval(interval);
              window.location.href = 'pagedashboardpro.html';
            }
          }, 1000);

          // Sauvegarde locale
          localStorage.setItem('userData', JSON.stringify({
            id: newProfessional.id,
            name: newProfessional.name,
            email: newProfessional.email,
            job: newProfessional.job,
            skills: newProfessional.skills
          }));

          this.resetForm();

        } catch (error) {
          console.error('Erreur lors de l\'inscription :', error);
          this.errorMessage = 'Erreur lors de l\'inscription : ' + error.message;
        } finally {
          this.loading = false;
          this.clearMessagesAfterDelay();
        }
      },

      // Hashage SHA-256 (juste pour démo)
      async hashPassword(password) {
        const encoder = new TextEncoder();
        const data = encoder.encode(password);
        const hash = await crypto.subtle.digest('SHA-256', data);
        return Array.from(new Uint8Array(hash))
                    .map(b => b.toString(16).padStart(2, '0'))
                    .join('');
      },

      // Réinitialise le formulaire
      resetForm() {
        this.form = {
          name: '', email: '', job: '', experiences: [], skills: [],
          password: '', confirmPassword: '', acceptTerms: false
        };
        this.newSkill = '';
        this.errors = {};
      },

      clearMessages() {
        this.successMessage = '';
        this.errorMessage = '';
      },

      clearMessagesAfterDelay() {
        setTimeout(() => this.clearMessages(), 8000);
      }
    }
  }
</script>

</body>
</html>
